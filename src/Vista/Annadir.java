/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Modelo.Conexionn;
import com.mysql.jdbc.Statement;
import java.awt.Color;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Modelo.Conexionn;
import com.mysql.jdbc.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;

/**
 *
 * @author jefer
 */
public class Annadir extends javax.swing.JInternalFrame {

    DefaultTableModel modelo;//Crea la variable modelo, donde se almacena los valores "Por defecto" de la misma (0 filas, 0 columnas)
    int filas = 0;
    Statement ejecutor = null;
    Connection con;
    int cont = 0;

    /**
     * Creates new form Producto
     */
    public Annadir() {
        //Se definen los valores del ComboBox1 y a su vez se declarán como "No editables" los valores del jTextField4 y jTextField5.
        initComponents();
        jComboBox1.addItem("BIENES");
        jComboBox1.addItem("SERVICIOS");
        this.jTextField4.setEditable(false);
        this.jTextField5.setEditable(false);
        Conectar();
       
    }
    
     public void Conectar(){
        con =null;
        try{
            Class.forName("com.mysql.jdbc.Driver");
            con=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/facturacion","root","");
            System.out.println("Conexion exitosa");
        }catch(Exception e){
            System.out.println("Error"+e);
        }
    }
     
    protected void Agregar(){
        String mensajeError="";
        String query="";
        PreparedStatement preparar=null;
        if(this.jTextField1.getText().isEmpty()==true){
            mensajeError= mensajeError + " Nombre de producto no puede estar vacio";
        }
        if(this.jTextField2.getText().isEmpty()==true){
             mensajeError= mensajeError + " Cantidad no puede estar vacio";
        }
        if(this.jTextField3.getText().isEmpty() == true){
             mensajeError= mensajeError + " Precio Unitario no puede estar vacio";
        }
        if(this.jTextField6.getText().isEmpty() == true){
             mensajeError= mensajeError + " Precio Compra no puede estar vacio";
        }
        if(mensajeError.isEmpty()==true){
            query="insert into producto "
                 + "(IdProducto,    IdTipoProducto, NombreProducto, DescripcionProducto,    PrecioCompra,   IVAxProducto,   RetefuentexProducto,    PrecioVenta) values"
                 + "('"+cont+"','"+"1001"+"','"+jTextField1.getText()+"','"+jTextField2.getText()+"','"+jTextField6.getText()+"','"+"12.2"+"','"+"13.5"+"','"+jTextField6.getText()+"')";
       try{
           preparar=con.prepareStatement(query);
           preparar.executeUpdate();
       }catch(Exception e){
           
       }
        }else{
            JOptionPane.showMessageDialog(null, mensajeError);
        }
    }
    
    public void eliminarElemento() {
        
        modelo = (DefaultTableModel) this.jTable1.getModel();

        //Intanciando una calse para reconocer los elementos seleccionados en el jTable
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        //Intanciando una calse para reconocer los elementos seleccionados en el jTable
        int filaEli = jTable1.getSelectedRow();
        //Condicion para que el programa sepa que se esta seleccionando una fila
        if (filaEli >= 0) {
            //Remover elementos de el jTable
            dtm.removeRow(jTable1.getSelectedRow());
            //Remover los elementos del ArrayList
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("INTERFAZ");
        setAutoscrolls(true);
        setMaximumSize(new java.awt.Dimension(21474, 21474));
        setPreferredSize(new java.awt.Dimension(1300, 800));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Nombre de producto ");

        jTextField1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(102, 102, 102));
        jTextField1.setText("Alfanumerico");
        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BorrarLetras(evt);
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ModificarJCB2(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Tipo de Producto");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("DESCRIPCIÓN DEL PRODUCTO");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Cantidad");

        jTextField2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(102, 102, 102));
        jTextField2.setText("Solo Numeros");
        jTextField2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BorrarNumero(evt);
            }
        });
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ValidarNumero(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Tipo de Durabilidad");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("Expecificacion del Producto");

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jButton1.setText("AÑADIR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("FINALIZAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo ", "Expecificasion", "Nombre", "Cantidad", "Tipo Durabilidad", "ID Producto", "ID Tipo ", "Precio Compra", "Precio Unitario", "Sub Total", "IVA ", "Retefuente", "Total"
            }
        ));
        jTable1.setEnabled(false);
        jScrollPane1.setViewportView(jTable1);

        jButton3.setText("ATRAS");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setText("INFORMACION DEL PRODUCTO");

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setText("Precio Unitario");

        jTextField3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextField3.setForeground(new java.awt.Color(102, 102, 102));
        jTextField3.setText("Solo Numeros y \" , \"");
        jTextField3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BorrarLetrasJTF3(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel10.setText("Impuestos");

        jCheckBox1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox1.setText("IVA");
        jCheckBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HabilitarJTF(evt);
            }
        });

        jCheckBox2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox2.setText("ReteFuente");
        jCheckBox2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HabilitarJTF5(evt);
            }
        });

        jTextField4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextField4.setForeground(new java.awt.Color(102, 102, 102));
        jTextField4.setText("Solo Numeros y \" , \"");
        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ValidarNum(evt);
            }
        });

        jTextField5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextField5.setForeground(new java.awt.Color(102, 102, 102));
        jTextField5.setText("Solo Numeros y \" , \"");
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });
        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ValidarNumer(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel11.setText("%");

        jLabel12.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel12.setText("%");

        jLabel13.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel13.setText("Precio Compra");

        jTextField6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextField6.setForeground(new java.awt.Color(102, 102, 102));
        jTextField6.setText("Solo Numeros y \" , \"");
        jTextField6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BorrarLtrasJTF6(evt);
            }
        });
        jTextField6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ValidarNumeroJTF6(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 0, 0));
        jLabel14.setText("PRODUCTO");

        jButton4.setText("jButton4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(30, 30, 30)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 301, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCheckBox1)
                                .addGap(39, 39, 39)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCheckBox2)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel12)))))
                .addGap(102, 102, 102))
            .addGroup(layout.createSequentialGroup()
                .addGap(194, 194, 194)
                .addComponent(jSeparator1))
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(381, 381, 381)
                .addComponent(jButton1)
                .addGap(186, 186, 186))
            .addGroup(layout.createSequentialGroup()
                .addGap(486, 486, 486)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(163, 163, 163))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(481, 481, 481)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(368, 368, 368)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jCheckBox1)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox2)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel12)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton3))
                        .addGap(30, 30, 30)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
String aux = "";
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // Según lo seleccionado en el ComboBox1, se mostrarán diferentes opciones por medio del ComboBox2, las cuales podrán ser seleccionadas por el usuario según su necesidad.
        String Elec = (String) jComboBox1.getSelectedItem();
        if (Elec.equals("BIENES")) {
            jComboBox2.removeAllItems();
            jComboBox2.addItem("Canasta Familiar");
            jComboBox2.addItem("Electrodomesticos");
            jComboBox2.addItem("Lujo");
            jComboBox2.addItem("Esenciales o Basicos");
            jComboBox2.addItem("Alimentacion");
            jComboBox2.addItem("Vestuario");
            jComboBox2.addItem("Recreacion");

        } else {
            jComboBox2.removeAllItems();
            jComboBox2.addItem("Publicos");
            jComboBox2.addItem("Medicos");
            jComboBox2.addItem("Transporte");
            jComboBox2.addItem("Esteticos");
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void ModificarJCB2(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ModificarJCB2
        //Comprobará que el usuario seleccionara algo en el ComboBox2, dependiendo de ello le permitirá continuar. En caso de que no hubiera sido seleccionado algo en el ComboBox2 no le permitira continuar.
        //Dependiendo de la seleccion en el ComboBox2 por parte del usuario, aparecerá una casilla la cuál dirá si el elemento seleccionado es perecedero o no.
        String Elec = (String) jComboBox2.getSelectedItem();
        if (jTextField1.getText().equals("")) {
            jComboBox1.setEnabled(true);
            jComboBox2.setEnabled(true);
            this.jLabel6.setText("");
        } else {
            jComboBox1.setEnabled(false);
            jComboBox2.setEnabled(false);
            if (Elec.equals("Canasta Familiar") || Elec.equals("Alimentacion") || Elec.equals("Esenciales o Basicos")) {
                this.jLabel6.setText("PERECEDEROS");
            }
            if (Elec.equals("Electrodomesticos") || Elec.equals("Lujo") || Elec.equals("Vestuario") || Elec.equals("Recreacion") || Elec.equals("Publicos") || Elec.equals("Medicos") || Elec.equals("Transporte") || Elec.equals("Esteticos")) {
                this.jLabel6.setText("NO PERECEDEROS");
            }
        }

    }//GEN-LAST:event_ModificarJCB2

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed

    }//GEN-LAST:event_jComboBox2ActionPerformed
   
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Se agregan las columnas y filas a la tabla según los datos que se registren en el momento de la ejecucion del programa por parte del usuario. A su vez que se realizan las operaciones relacionadas con los datos suministrados.
       
        modelo = (DefaultTableModel) this.jTable1.getModel();
        modelo.addRow(new Object[filas]);
        double IVA=0;
        double Retefuente = 0;
        if("Solo Numeros y \" , \"".equals(this.jTextField4.getText())||"".equals(this.jTextField4.getText())){
           IVA=0;
        }else{
            IVA=Integer.parseInt(this.jTextField4.getText());
        }
        if("Solo Numeros y \" , \"".equals(this.jTextField5.getText())||"".equals(this.jTextField4.getText())){
           Retefuente = 0;
        }else{
           Retefuente = Integer.parseInt(this.jTextField5.getText());
        }
        double SubTotal = (Integer.parseInt(this.jTextField3.getText()) * (Integer.parseInt(this.jTextField2.getText())));
        IVA=IVA/100;
        Retefuente=Retefuente/100;
        double Total =SubTotal+(SubTotal*IVA)+(SubTotal*Retefuente);
        System.out.println(Total);
        System.out.println(this.jTextField4.getText());
        System.out.println(Retefuente);
        for (int x = 0; x < this.jTable1.getColumnCount() - 1; x++) {
            modelo.setValueAt(this.jComboBox1.getSelectedItem(), filas, 0);
            modelo.setValueAt(this.jComboBox2.getSelectedItem(), filas, 1);
            modelo.setValueAt(this.jTextField1.getText(), filas, 2);
            modelo.setValueAt(this.jTextField2.getText(), filas, 3);
            modelo.setValueAt(this.jLabel6.getText(), filas, 4);
            modelo.setValueAt(String.valueOf(cont), filas, 5);
            if (this.jComboBox2.getSelectedItem() == "Canasta Familiar") {
                modelo.setValueAt("1001", filas, 6);
            }
            if (this.jComboBox2.getSelectedItem() == "Electrodomesticos") {
                modelo.setValueAt("1002", filas, 6);
            }
            if (this.jComboBox2.getSelectedItem() == "Lujo") {
                modelo.setValueAt("1003", filas, 6);
            }
            if (this.jComboBox2.getSelectedItem() == "Esenciales o Basicos") {
                modelo.setValueAt("1004", filas, 6);
            }
            if (this.jComboBox2.getSelectedItem() == "Alimentacion") {
                modelo.setValueAt("1005", filas, 6);
            }
            if (this.jComboBox2.getSelectedItem() == "Vestuario") {
                modelo.setValueAt("1006", filas, 6);
            }
            if (this.jComboBox2.getSelectedItem() == "Recreacion") {
                modelo.setValueAt("1007", filas, 6);
            }
            if (this.jComboBox2.getSelectedItem() == "Publicos") {
                modelo.setValueAt("1008", filas, 6);
            }
            if (this.jComboBox2.getSelectedItem() == "Medicos") {
                modelo.setValueAt("1009", filas, 6);
            }
            if (this.jComboBox2.getSelectedItem() == "Transporte") {
                modelo.setValueAt("1010", filas, 6);
            }
            if (this.jComboBox2.getSelectedItem() == "Esteticos") {
                modelo.setValueAt("1011", filas, 6);
            }
            modelo.setValueAt(this.jTextField6.getText(), filas, 7);
            modelo.setValueAt(this.jTextField3.getText(), filas, 8);
            modelo.setValueAt(SubTotal, filas, 9);
            if ("Solo Numeros y \" , \"".equals(this.jTextField4.getText()) || "".equals(this.jTextField4.getText())) {
                modelo.setValueAt("No Tiene", filas, 10);
            } else {
                modelo.setValueAt(this.jTextField4.getText() + "%", filas, 10);
            }
            if ("Solo Numeros y \" , \"".equals(this.jTextField5.getText()) || "".equals(this.jTextField5.getText())) {
                modelo.setValueAt("No Tiene", filas, 11);
            } else {
                modelo.setValueAt(this.jTextField5.getText() + "%", filas, 11);
            }
            modelo.setValueAt(Total, filas, 12);
        }
        cont++;
        filas++;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void BorrarLetras(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BorrarLetras
        // Al seleccionar el campo en cuestión, borrará las letrás que tiene de fondo y cambiará el color de las letras por negro.
        this.jTextField1.setText("");
        this.jTextField1.setForeground(Color.BLACK);
    }//GEN-LAST:event_BorrarLetras

    private void ValidarNumero(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ValidarNumero
        //Valida que al escribir en el campo en cuestión, solo aceptará números y " , ". Todo aquello diferente a lo anteriormente mencionado será eliminado automaticamente.
        char car = evt.getKeyChar();
        if (Character.isLetter(car)) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Solo Numeros");
            this.jTextField2.setText("");
        } else {

        }
    }//GEN-LAST:event_ValidarNumero

    private void BorrarNumero(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BorrarNumero
        // Al seleccionar el campo en cuestión, borrará las letrás que tiene de fondo y cambiará el color de las letras por negro.
        this.jTextField2.setText("");
        this.jTextField2.setForeground(Color.BLACK);

    }//GEN-LAST:event_BorrarNumero
    int contCo = 0;
    private void HabilitarJTF(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HabilitarJTF
        //Habilita y/o deshabilita una casilla (Dependienndo de las instrucciones del usuario).
        if (contCo == 0) {
            this.jTextField4.setEditable(true);
            this.jTextField4.setForeground(Color.BLACK);
            this.jTextField4.setText("");
            contCo++;
        } else if (contCo == 1) {
            this.jTextField4.setEditable(false);
            this.jTextField4.setText("");
            this.jTextField4.setForeground(Color.GRAY);
            this.jTextField4.setText("Solo Numeros y \" , \"");
            contCo--;
        }
    }//GEN-LAST:event_HabilitarJTF

    private void ValidarNum(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ValidarNum
        //Comprueba si el valor digitado por el usuario son solo número y la excepción del uso de " , "
        char car = evt.getKeyChar();
        if (Character.isDigit(car) || car == ',' || Character.isISOControl(car)) {

        } else {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Solo Numeros");
            this.jTextField2.setText("");
        }
    }//GEN-LAST:event_ValidarNum

    private void BorrarLetrasJTF3(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BorrarLetrasJTF3
        // Al seleccionar el campo en cuestión, borrará las letrás que tiene de fondo y cambiará el color de las letras por negro.
        this.jTextField3.setText("");
        this.jTextField3.setForeground(Color.BLACK);
    }//GEN-LAST:event_BorrarLetrasJTF3

    private void BorrarLtrasJTF6(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BorrarLtrasJTF6
        // Al seleccionar el campo en cuestión, borrará las letrás que tiene de fondo y cambiará el color de las letras por negro.
        this.jTextField6.setText("");
        this.jTextField6.setForeground(Color.BLACK);
    }//GEN-LAST:event_BorrarLtrasJTF6

    private void ValidarNumeroJTF6(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ValidarNumeroJTF6
        //Comprueba si el valor digitado por el usuario son solo número y la excepción del uso de " , "
        char car = evt.getKeyChar();
        if (Character.isDigit(car) || car == ',' || Character.isISOControl(car)) {

        } else {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Solo Numeros");
            this.jTextField3.setText("");
        }
    }//GEN-LAST:event_ValidarNumeroJTF6
 int contCol = 0;
    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        //Habilita y/o deshabilita una casilla (Dependienndo de las instrucciones del usuario).
      if (contCol == 0) {
            this.jTextField4.setEditable(true);
            this.jTextField4.setForeground(Color.BLACK);
            this.jTextField4.setText("");
            contCol++;
        } else if (contCol == 1) {
            this.jTextField4.setEditable(false);
            this.jTextField4.setText("");
            this.jTextField4.setForeground(Color.GRAY);
            this.jTextField4.setText("Solo Numeros y \" , \"");
            contCol--;
        }
    }//GEN-LAST:event_jTextField5ActionPerformed
 
    private void ValidarNumer(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ValidarNumer
        //Comprueba si el valor digitado por el usuario son solo número y la excepción del uso de " , "
        char car = evt.getKeyChar();
        if (Character.isDigit(car) || car == ',' || Character.isISOControl(car)) {

        } else {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Solo Numeros");
            this.jTextField3.setText("");
        }
    }//GEN-LAST:event_ValidarNumer
int contCol222 = 0;
    private void HabilitarJTF5(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HabilitarJTF5
        //Habilita y/o deshabilita una casilla (Dependienndo de las instrucciones del usuario).
        if (contCol222 == 0) {
            this.jTextField5.setEditable(true);
            this.jTextField5.setForeground(Color.BLACK);
            this.jTextField5.setText("");
            contCol222++;
        } else if (contCol222 == 1) {
            this.jTextField5.setEditable(false);
            this.jTextField5.setText("");
            this.jTextField5.setForeground(Color.GRAY);
            this.jTextField5.setText("Solo Numeros y \" , \"");
            contCol222--;
        }
    }//GEN-LAST:event_HabilitarJTF5

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Cierra la ventana actual.
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Cierra el sistema.
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
   Agregar();
    }//GEN-LAST:event_jButton4ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    // End of variables declaration//GEN-END:variables
}
